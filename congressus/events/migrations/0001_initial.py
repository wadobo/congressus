# Generated by Django 2.0.6 on 2018-06-16 19:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConfirmEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=300, verbose_name='subject')),
                ('body', models.TextField(verbose_name='body')),
            ],
            options={
                'verbose_name': 'confirm email',
                'verbose_name_plural': 'confirm emails',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('type', models.CharField(choices=[('percent', 'Percent'), ('amount', 'Amount')], default='percent', max_length=8, verbose_name='type')),
                ('value', models.IntegerField(default=0, verbose_name='value')),
                ('unit', models.BooleanField(default=True, verbose_name='per unit')),
            ],
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attach', models.FileField(upload_to='attachments', verbose_name='attach')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachs', to='events.ConfirmEmail', verbose_name='email')),
            ],
            options={
                'verbose_name': 'email attachment',
                'verbose_name_plural': 'email attachments',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('slug', models.SlugField(editable=False)),
                ('info', models.TextField(blank=True, null=True, verbose_name='info')),
                ('active', models.BooleanField(default=False, verbose_name='active')),
                ('admin', models.EmailField(blank=True, max_length=254, null=True, verbose_name='admin email')),
                ('discounts', models.ManyToManyField(blank=True, related_name='events', to='events.Discount', verbose_name='discounts')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='ExtraSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='Start at')),
                ('end', models.DateTimeField(verbose_name='End at')),
                ('used', models.BooleanField(default=False, verbose_name='used')),
            ],
            options={
                'verbose_name': 'extra session',
                'verbose_name_plural': 'extra sessions',
            },
        ),
        migrations.CreateModel(
            name='Gate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gates', to='events.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'gate',
                'verbose_name_plural': 'gates',
            },
        ),
        migrations.CreateModel(
            name='InvCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True, verbose_name='code')),
                ('person', models.CharField(blank=True, max_length=100, null=True, verbose_name='for person')),
                ('used', models.BooleanField(default=False, verbose_name='used')),
                ('type', models.CharField(choices=[('invited', 'Invited'), ('speaker', 'Speaker'), ('student', 'Student')], default='invited', max_length=15, verbose_name='type')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='events.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'invitation code',
                'verbose_name_plural': 'invitation codes',
            },
        ),
        migrations.CreateModel(
            name='SeatLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('top', models.IntegerField(default=0, verbose_name='top')),
                ('left', models.IntegerField(default=0, verbose_name='left')),
                ('direction', models.CharField(choices=[('u', 'Up'), ('l', 'Left'), ('r', 'Right'), ('d', 'Down')], default='d', max_length=2, verbose_name='direction')),
                ('layout', models.TextField(help_text='the layout to select the numbered seat. L = Free, _ = Space, R = Reserved', verbose_name='seats layout')),
                ('column_start_number', models.IntegerField(default=1, verbose_name='column start number')),
                ('gate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.Gate', verbose_name='gate')),
            ],
            options={
                'verbose_name': 'seat Layout',
                'verbose_name_plural': 'seat Layouts',
            },
        ),
        migrations.CreateModel(
            name='SeatMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('img', models.ImageField(blank=True, null=True, upload_to='maps', verbose_name='map image')),
                ('scene_top', models.IntegerField(default=0, verbose_name='scene top limit')),
                ('scene_bottom', models.IntegerField(default=0, verbose_name='scene bottom limit')),
                ('scene_left', models.IntegerField(default=0, verbose_name='scene left limit')),
                ('scene_right', models.IntegerField(default=0, verbose_name='scene right limit')),
            ],
            options={
                'verbose_name': 'seat Map',
                'verbose_name_plural': 'seat Maps',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('slug', models.SlugField(editable=False)),
                ('short_name', models.CharField(blank=True, max_length=3, null=True, verbose_name='short name')),
                ('start', models.DateTimeField(verbose_name='start date')),
                ('end', models.DateTimeField(verbose_name='end date')),
                ('price', models.FloatField(default=10, verbose_name='ticket price')),
                ('window_price', models.FloatField(default=10, verbose_name='price in the ticket window')),
                ('tax', models.IntegerField(default=21, verbose_name='ticket tax percentage')),
                ('autoseat_mode', models.CharField(default='ASC', help_text='ASC, DESC, RANDOM or LIST: layout_name1,layout_name2', max_length=300, verbose_name='autoseat mode')),
                ('dateformat', models.CharField(choices=[('start', 'Date and start time'), ('complete', 'Date, start and end time'), ('onlydate', 'Only date')], default='start', max_length=50, verbose_name='date format')),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Space',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('slug', models.SlugField(editable=False)),
                ('capacity', models.IntegerField(default=100, verbose_name='capacity')),
                ('numbered', models.BooleanField(default=False, verbose_name='numbered')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spaces', to='events.Event', verbose_name='event')),
                ('seat_map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spaces', to='events.SeatMap', verbose_name='seat map')),
            ],
            options={
                'verbose_name': 'space',
                'verbose_name_plural': 'spaces',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ThermalTicketTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('header', models.ImageField(blank=True, null=True, upload_to='templheader', verbose_name='header')),
                ('sponsors', models.ImageField(blank=True, null=True, upload_to='templsponsors', verbose_name='sponsors')),
                ('background', models.ImageField(blank=True, null=True, upload_to='templsback', verbose_name='background')),
                ('width', models.IntegerField(default=1795, verbose_name='width')),
                ('height', models.IntegerField(default=815, verbose_name='height')),
            ],
            options={
                'verbose_name': 'thermal ticket template',
                'verbose_name_plural': 'thermal ticket templates',
            },
        ),
        migrations.CreateModel(
            name='TicketField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('type', models.CharField(choices=[('email', 'Email'), ('tel', 'Phone'), ('url', 'URL'), ('text', 'Text'), ('textarea', 'TextArea'), ('check', 'CheckBox'), ('select', 'Select')], default='text', max_length=100, verbose_name='type')),
                ('label', models.CharField(max_length=500, verbose_name='label')),
                ('help_text', models.CharField(blank=True, max_length=1000, null=True, verbose_name='help text')),
                ('required', models.BooleanField(default=False, verbose_name='required')),
                ('options', models.CharField(blank=True, help_text='comma separated values, only for select type', max_length=500, null=True, verbose_name='options')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='events.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'ticket field',
                'verbose_name_plural': 'ticket fields',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TicketTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('header', models.ImageField(blank=True, null=True, upload_to='templheader', verbose_name='header')),
                ('sponsors', models.ImageField(blank=True, null=True, upload_to='templsponsors', verbose_name='sponsors')),
                ('contributors', models.ImageField(blank=True, null=True, upload_to='templcontributors', verbose_name='contributors')),
                ('links', models.CharField(blank=True, max_length=200, null=True, verbose_name='links')),
                ('info', models.TextField(blank=True, null=True, verbose_name='info text')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='note')),
            ],
            options={
                'verbose_name': 'ticket template',
                'verbose_name_plural': 'ticket templates',
            },
        ),
        migrations.AddField(
            model_name='session',
            name='space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='events.Space', verbose_name='space'),
        ),
        migrations.AddField(
            model_name='session',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.TicketTemplate', verbose_name='template'),
        ),
        migrations.AddField(
            model_name='session',
            name='thermal_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.ThermalTicketTemplate', verbose_name='thermal template'),
        ),
        migrations.AddField(
            model_name='seatlayout',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layouts', to='events.SeatMap', verbose_name='map'),
        ),
        migrations.AddField(
            model_name='extrasession',
            name='extra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_sessions', to='events.Session', verbose_name='extra'),
        ),
        migrations.AddField(
            model_name='extrasession',
            name='orig',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orig_sessions', to='events.Session', verbose_name='orig'),
        ),
        migrations.AddField(
            model_name='confirmemail',
            name='event',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email', to='events.Event', verbose_name='event'),
        ),
    ]
